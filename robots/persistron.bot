redis = require 'redis'
client = redis.createClient()
client.select 2

acknowledge = (reply) -> (err) ->
	if err
		reply {type:"error", data:err}
	else
		reply {type:"set done"}

deliver = (reply, fn) -> (err, value) ->
	if err
		reply {type:"error", data:err}
	else
		reply {type:"get done", data:fn(value)}

keyName = (key) -> "ROBO" + JSON.stringify(key)

@listen 'set data', ({data:{key, value}}, reply) ->
	unless key? and value != undefined
		@transmit type:"error", data:"ERROR ERROR NEED KEY AND VAL"
	else
		client.set (keyName key), JSON.stringify(value), (acknowledge reply)
	
@listen 'get data', ({data:key}, reply) ->
	unless key?
		@transmit type:"error", data:"ERROR ERROR NEED KEY"
	else
		client.get (keyName key), (deliver reply, JSON.parse)

@listen 'push list', ({data:{key, value}}, reply) ->
	unless key? and value != undefined
		@transmit type:"error", data:"ERROR ERROR NEED KEY AND VAL"
	else
		client.rpush (keyName key), JSON.stringify(value), (acknowledge reply)

@listen 'get list', ({data:key}, reply) ->
	unless key?
		@transmit type:"error", data:"ERROR ERROR NEED KEY"
	else
		client.lrange (keyName key), 0, -1, deliver(reply, (v) -> v.map(JSON.parse))


